/*/***************************************************************************
 *	@ファイル名		:	digitalIO.c
 *	@概要		:	DIGITAL-IOxポートを用いて，デジタル的な入出力を行います．
 *					以下にマザーボード上に設けられているDIGITAL-IOxのピン配置を示しておきます．
 *
 *					[DIO0]	PB7 , PC0 , PB11, PB12, PA8, PA11, PA12, PB6
 *					[DIO1]	PC8 , PC9 , PC11, PE2 , PE3 , PD2 , PC3 , PD6
 *
 *	@バージョン		:	4.0.0
 *	@開発者			:	キネクト
 *	@Ver4.0.0移行	:	むぎ
 *	@使用環境		:	STM32F407VG, MB_Ver5, Coocox CoIDE
 **************************************************************************/

#ifndef __DIGITALIO_H__
#define __DIGITALIO_H__

/* インクルード	============================================================= */
#include <stm32f4xx.h>

/* 定数定義	============================================================= */

/* 入出力設定 */
#define DIO_MODE_OUT	GPIO_Mode_OUT
#define DIO_MODE_IN		GPIO_Mode_IN

/* マクロ定義	============================================================= */
/* ------------------------------------------------------------
 * @マクロ名		:	DIO_OutputPin
 * @概要				:	DIOから "0"(0V) or "1"(3V) を出力します．
 * @引数-port		:	出力ポートを選択します(0-2)，DIOxのxの部分．
 * 			-pin		:	出力ピンを選択します(0-7)．DIOx-yのyの部分．
 * 			-status	:	出力信号(0/1)
 * @留意点			:	規定外の超えた引数を選択すると，
 *								メモリのどこかの値が書き換わることになります．
 * --------------------------------------------------------- */
#define DIO_OutputPin(port, pin, status)	(*((u32*)DIO_ODR_ADDR_BB[(port)][(pin)]) = (status))

/* ------------------------------------------------------------
 * @マクロ名	:	DIO_TogglePin
 * @概要			:	DIOの出力信号を反転させます．
 * @引数-port	:	出力ポートを選択します(0-2)．DIOxのxの部分．
 * 			-pin	:	出力ピンを選択します(0-7)．DIOx-yのyの部分．
 * @留意点		:	規定外の超えた引数を選択すると，
 *							メモリのどこかの値が書き換わることになります．
   --------------------------------------------------------- */
#define DIO_TogglePin(port, pin)	(*((u32*)DIO_ODR_ADDR_BB[(port)][(pin)]) ^= 1)

/* ------------------------------------------------------------
 * @マクロ名	:	DIO_CheckPin
 * @概要			:	DigitalIOxが入力した信号を読み取ります．
 * @引数-port	:	入力ポートを選択します(0-2)．DIOxのxの部分．
 * 			-pin	:	入力ピンを選択します(0-7)．DIOx-yのyの部分．
 * @留意点		:	規定外の超えた引数を選択すると，
 *							メモリのどこかの値が書き換わることになります．
   --------------------------------------------------------- */
#define DIO_CheckPin(port, pin)	(*((u32*)DIO_IDR_ADDR_BB[(port)][(pin)]))

/* 変数プロトタイプ宣言	===================================================== */
/* GPIOxのODRのビットバンド */
extern const u32 DIO_ODR_ADDR_BB[2][8];

/* GPIOxのIDRのビットバンド */
extern const u32 DIO_IDR_ADDR_BB[2][8];

/* 関数プロトタイプ宣言	===================================================== */
/* ------------------------------------------------------------
 * @関数名		:	DIO0_Init
 * @概要			:	Digital-IO0の初期化をします．
 * @引数-pin	:	設定するピンを8bit(1:対象/0:対象外)で表す．
 * 			-mode	:	DIO_MODE_INを設定すると入力として初期化
 * 	   					DIO_MODE_OUTを設定すると出力として初期化
 * @使用例		: 上位4bitを入力，下位4bitを出力で初期化するとき．
 *							DIO0_Init(0xF0, DIO_MODE_IN);
 *							DIO0_Init(0x0F, DIO_MODE_OUT);
   --------------------------------------------------------- */
void DIO0_Init(u8 pin, GPIOMode_TypeDef mode);

/* ------------------------------------------------------------
 * @関数名		:	DIO1_Init
 * @概要			:	Digital-IO1の初期化をします．
 * @引数-pin	:	設定するピンを8bit(1:対象/0:対象外)で表す．
 * 			-mode	:	DIO_MODE_INを設定すると入力として初期化
 * 	   					DIO_MODE_OUTを設定すると出力として初期化
 * @使用例		: 上位4bitを入力，下位4bitを出力で初期化するとき．
 *							DIO1_Init(0xF0, DIO_MODE_IN);
 *							DIO1_Init(0x0F, DIO_MODE_OUT);
   --------------------------------------------------------- */
void DIO1_Init(u8 pin, GPIOMode_TypeDef mode);


#endif /* __DIGITALIO_H__ */
